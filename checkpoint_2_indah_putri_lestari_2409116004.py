# -*- coding: utf-8 -*-
"""Checkpoint 2 - Indah Putri Lestari_2409116004

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dtd99G4wUtJCePfz6qm0A40DkdUJSzqD

Sumber dataset : https://www.kaggle.com/datasets/himelsarder/cinema-hall-ticket-sales-and-customer-behavior

## Library
"""

import pandas as pd

"""## Membaca Data"""

df = pd.read_csv("/content/drive/MyDrive/PANDAS/cinema_hall_ticket_sales.csv")

df

"""# **DATA UNDERSTUNDING**

## Pengecekan Struktur Data
"""

print("\nTipe data setiap kolom dalam data ini: ")
df.dtypes

print("\nJumlah baris dan kolom dalam data ini: ")
df.shape

print("\nStatistik deskriptif data ini: ")
df.describe()

print('\nKorelasi antar kolom numerik: ')
df.corr(numeric_only=True)

"""# **DATA PREPARATION**

## Missing Values
"""

print((df.isna().sum() / len(df)) * 100)

"""# Duplicated Values"""

df[df.duplicated()]

"""# Outliers"""

results = []

cols = df.select_dtypes(include=['float64', 'int64'])

for col in cols:
  q1 = df[col].quantile(0.25)
  q3 = df[col].quantile(0.75)
  iqr = q3 - q1
  lower_bound = q1 - 1.5*iqr
  upper_bound = q3 + 1.5*iqr
  outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]
  percent_outliers = (len(outliers)/len(df))*100
  results.append({'Kolom': col, 'Persentase Outliers': percent_outliers})

# Dataframe dari list hasil
results_df = pd.DataFrame(results)
results_df.set_index('Kolom', inplace=True)
results_df = results_df.rename_axis(None, axis=0).rename_axis('Kolom', axis=1)

# Tampilkan dataframe
display(results_df)

df

"""Melakukan Imputasi"""

columns_to_impute = ["Total_Harga_Tiket"]

for col in columns_to_impute:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR

    # Menggunakan .loc[] agar tidak muncul SettingWithCopyWarning
    df.loc[:, col] = df[col].clip(lower=lower_bound, upper=upper_bound)

results = []

cols = df.select_dtypes(include=['float64', 'int64'])

for col in cols:
  q1 = df[col].quantile(0.25)
  q3 = df[col].quantile(0.75)
  iqr = q3 - q1
  lower_bound = q1 - 1.5*iqr
  upper_bound = q3 + 1.5*iqr
  outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]
  percent_outliers = (len(outliers)/len(df))*100
  results.append({'Kolom': col, 'Persentase Outliers': percent_outliers})

# Dataframe dari list hasil
results_df = pd.DataFrame(results)
results_df.set_index('Kolom', inplace=True)
results_df = results_df.rename_axis(None, axis=0).rename_axis('Kolom', axis=1)

# Tampilkan dataframe
display(results_df)

df

"""## Incosistent Value"""

df

"""Mengubah pada kolom Number_of_Person yang sebelumnya terdapat objek "Alone" akan diubah menjadi 1."""

df["Number_of_Person"] = pd.to_numeric(df["Number_of_Person"], errors="coerce")
df["Number_of_Person"] = df["Number_of_Person"].fillna(0).astype(int)
df["Number_of_Person"] = df['Number_of_Person'].replace(0,1)

df

"""Mengubah tipe data yang sebelumnya string menjadi int pada kolom Purchase_Again."""

df['Purchase_Again'] = df['Purchase_Again'].replace({'Yes': 1, 'No': 0}).astype(int)

df

"""## Construct Data"""

df['Total_Harga_Tiket'] = df['Ticket_Price'] * df['Number_of_Person']

print(df.head())

"""## Data Reduction"""

df = df.drop('Ticket_ID', axis=1, errors='ignore')

df